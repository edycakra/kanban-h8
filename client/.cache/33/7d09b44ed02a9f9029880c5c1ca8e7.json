{"id":"src/components/EditForm.vue","dependencies":[{"name":"/home/edycakra/Documents/H8/P2/Porto/Kanban/client/kanban-porto/package.json","includedInParent":true,"mtime":1581682511717},{"name":"vue-hot-reload-api","parent":"/home/edycakra/Documents/H8/P2/Porto/Kanban/client/kanban-porto/src/components/EditForm.vue","resolved":"/home/edycakra/Documents/H8/P2/Porto/Kanban/client/kanban-porto/node_modules/vue-hot-reload-api/dist/index.js"},{"name":"vue","parent":"/home/edycakra/Documents/H8/P2/Porto/Kanban/client/kanban-porto/src/components/EditForm.vue","resolved":"/home/edycakra/Documents/H8/P2/Porto/Kanban/client/kanban-porto/node_modules/vue/dist/vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'EditForm',\n  props: ['currentPage', 'editTaskObj'],\n  methods: {\n    editTask: function editTask(id) {\n      this.$emit('editTask', id);\n    },\n    showDashboard: function showDashboard() {\n      this.$emit('showDashboard');\n    }\n  }\n};\nexports.default = _default;\n        var $892d3b = exports.default || module.exports;\n      \n      if (typeof $892d3b === 'function') {\n        $892d3b = $892d3b.options;\n      }\n    \n        /* template */\n        Object.assign($892d3b, (function () {\n          var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.currentPage === \"editFormPage\"\n    ? _c(\"div\", { staticClass: \"container has-text-left\" }, [\n        _c(\"div\", { staticClass: \"column is-4 is-offset-4\" }, [\n          _c(\"div\", { staticClass: \"box\" }, [\n            _c(\n              \"form\",\n              {\n                attrs: { id: \"edit-form\" },\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.editTask(_vm.editTaskObj.id)\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"field\" }, [\n                  _c(\"h3\", { staticClass: \"title has-text-black\" }, [\n                    _vm._v(\"Edit Task\")\n                  ]),\n                  _c(\"hr\"),\n                  _vm._v(\" \"),\n                  _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Title\")]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"control\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.editTaskObj.title,\n                          expression: \"editTaskObj.title\"\n                        }\n                      ],\n                      staticClass: \"input is-info\",\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"type your task here\",\n                        required: \"\"\n                      },\n                      domProps: { value: _vm.editTaskObj.title },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.editTaskObj,\n                            \"title\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    })\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Category\")]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"control\" }, [\n                    _c(\"div\", { staticClass: \"select\" }, [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.editTaskObj.category,\n                              expression: \"editTaskObj.category\"\n                            }\n                          ],\n                          on: {\n                            change: function($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function(o) {\n                                  return o.selected\n                                })\n                                .map(function(o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.$set(\n                                _vm.editTaskObj,\n                                \"category\",\n                                $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              )\n                            }\n                          }\n                        },\n                        [\n                          _c(\n                            \"option\",\n                            { attrs: { selected: \"\", disabled: \"\" } },\n                            [_vm._v(\"Select\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"option\",\n                            {\n                              staticClass: \"has-text-black\",\n                              attrs: { value: \"BACKLOG\" }\n                            },\n                            [_vm._v(\"BACKLOG\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"option\",\n                            {\n                              staticClass: \"has-text-warning\",\n                              attrs: { value: \"TODO\" }\n                            },\n                            [_vm._v(\"TODO\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"option\",\n                            {\n                              staticClass: \"has-text-link\",\n                              attrs: { value: \"ONGOING\" }\n                            },\n                            [_vm._v(\"ONGOING\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"option\",\n                            {\n                              staticClass: \"has-text-success\",\n                              attrs: { value: \"DONE\" }\n                            },\n                            [_vm._v(\"DONE\")]\n                          )\n                        ]\n                      )\n                    ])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"button is-grey\",\n                    on: { click: _vm.showDashboard }\n                  },\n                  [\n                    _vm._v(\"Cancel    \"),\n                    _c(\"i\", { staticClass: \"fas fa-times-circle\" })\n                  ]\n                ),\n                _vm._v(\" \"),\n                _vm._m(0)\n              ]\n            )\n          ])\n        ])\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"button\",\n      { staticClass: \"button is-black\", attrs: { type: \"submit\" } },\n      [_vm._v(\"Edit    \"), _c(\"i\", { staticClass: \"fas fa-check-circle\" })]\n    )\n  }\n]\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$892d3b', $892d3b);\n          } else {\n            api.reload('$892d3b', $892d3b);\n          }\n        }\n\n        \n      }\n    })();"},"sourceMaps":{"js":{"mappings":[{"source":"src/components/EditForm.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":40,"column":15}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":2}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":6}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":8}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":41,"column":18}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":2}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":7}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":9}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":10}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":23}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":25}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":38}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":42,"column":39}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":2}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":9}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":11}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":4}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":44,"column":12}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":32}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":44,"column":34}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":36}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":11}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":16}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":17}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":27}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":29}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":40,"column":0},"generated":{"line":45,"column":31}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":41,"column":0},"generated":{"line":46,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":46,"column":5}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":42,"column":0},"generated":{"line":47,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":42,"column":0},"generated":{"line":47,"column":4}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":47,"column":17}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":42,"column":0},"generated":{"line":47,"column":44}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":43,"column":0},"generated":{"line":48,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":43,"column":0},"generated":{"line":48,"column":11}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":43,"column":0},"generated":{"line":48,"column":16}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":43,"column":0},"generated":{"line":48,"column":17}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":43,"column":0},"generated":{"line":48,"column":32}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":44,"column":0},"generated":{"line":49,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":38,"column":0},"generated":{"line":50,"column":0}},{"source":"src/components/EditForm.vue","name":null,"original":{"line":35,"column":0},"generated":{"line":51,"column":0}}],"sources":{"src/components/EditForm.vue":"<template>\n        <!-- edit form -->\n        <div class=\"container has-text-left\" v-if=\"currentPage === 'editFormPage'\">\n            <div class=\"column is-4 is-offset-4\">\n                <div class=\"box\">\n                    <form id=\"edit-form\" @submit.prevent=\"editTask(editTaskObj.id)\">\n                        <div class=\"field\">\n                            <h3 class=\"title has-text-black\">Edit Task</h3><hr>\n                            <label class=\"label\">Title</label>\n                            <div class=\"control\">\n                              <input class=\"input is-info\" type=\"text\" placeholder=\"type your task here\" v-model=\"editTaskObj.title\" required>\n                            </div>\n                            <label class=\"label\">Category</label>\n                            <div class=\"control\">\n                                <div class=\"select\">\n                                  <select v-model=\"editTaskObj.category\">\n                                    <option selected disabled>Select</option>\n                                    <option value=\"BACKLOG\" class=\"has-text-black\">BACKLOG</option>\n                                    <option value=\"TODO\" class=\"has-text-warning\">TODO</option>\n                                    <option value=\"ONGOING\" class=\"has-text-link\">ONGOING</option>\n                                    <option value=\"DONE\" class=\"has-text-success\">DONE</option>\n                                  </select>\n                                </div>\n                              </div>\n                        </div>\n                        <button class=\"button is-grey\" @click=\"showDashboard\">Cancel&nbsp;&nbsp;&nbsp;&nbsp;<i class=\"fas fa-times-circle\"></i></button>\n                        <button type=\"submit\" class=\"button is-black\">Edit&nbsp;&nbsp;&nbsp;&nbsp;<i class=\"fas fa-check-circle\"></i></button>\n                    </form>\n                </div> \n            </div>\n        </div>\n</template>\n\n<script>\nexport default {\n    name:'EditForm',\n    props: ['currentPage', 'editTaskObj'],\n    methods: {\n        editTask(id) {\n            this.$emit('editTask', id)\n        },\n        showDashboard() {\n            this.$emit('showDashboard')\n        }\n    }\n}\n</script>"},"lineCount":null}},"error":null,"hash":"eec1835d6fb2bee98d3e78554235ba38","cacheData":{"env":{}}}